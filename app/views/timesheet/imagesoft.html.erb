<%= form_tag timesheet_imagesoft_path, :method => 'GET' do %>
  <%= text_field_tag 'start_date', @start_date.strftime('%Y-%m-%d') %>
  <%= text_field_tag 'end_date',   @end_date.strftime('%Y-%m-%d')   %>
  <%= submit_tag 'Go' %>
<% end %>

<p><%= link_to 'Download in Excel', timesheet_imagesoft_path(:format => :xls, :params => params) %></p>

<!--
<table>
<thead>
  <tr>
    <th>Duration</th>
    <th>Billable</th>
    <th>Start</th>
    <th>Stop</th>
    <th>Project</th>
    <th>Task</th>
    <th>Description</th>
    <th>Ignore Start and Stop</th>
  </tr>
</thead>
<tbody>
<% @time_entries.each do |time_entry| %>
  <tr>
    <td><%= h time_entry['duration'] %></td>
    <td><%= h time_entry['billable'] %></td>
    <td><%= h time_entry['start'] %></td>
    <td><%= h time_entry['stop'] %></td>
    <td><%= h time_entry['project']['client_project_name'] %></td>
    <td><%= h time_entry['task']['name'] if not time_entry['task'].nil? %></td>
    <td><%= h time_entry['description'] %></td>
    <td><%= h time_entry['ignore_start_and_stop'] %></td>
  </tr>
<% end %>
</tbody>
</table>

<%= @weeks %>
-->

<h1>IMAGESOFT INTERNAL WORK TIMESHEET</h1>

<% total_total_hours = 0.0 %>
<% @weeks.each do |key, week| %>
<h2><%= "#{week[:start].strftime('%d/%m/%Y')} - #{week[:end].strftime('%d/%m/%Y')}" %></h2>
<table border="1">
  <thead>
    <tr>
      <th>Date</th>
      <th>Time (Hrs)</th>
      <th>Client / Application Name</th>
      <th>Job Description</th>
    </tr>
  </thead>
  <tbody>
  <% total_hours = 0.0 %>
  <% week[:start].upto(week[:end]) do |day| %>
    <% index = day.strftime('%Y%m%d') %>
    <% if @timesheet.has_key?(index) then %>
      <% first = true %>
      <% @timesheet[index].each do |client,tasks| %>
    <tr>
      <td><%= day.strftime('%d/%m/%Y') if first %></td>
        <%
        #NOTE: this rounding is not needed anymore, as I'm already rounding at
        #the task level in the controller now
        floor = ((tasks[:duration] / @round_to_nearest).floor * @round_to_nearest)
        times = tasks[:times].map {|time|
          start = time[:start].strftime('%l:%M%P').tap{|x| x.strip!}
          stop  = time[:stop].strftime('%l:%M%P').tap{|x| x.strip!}
          "#{start}-#{stop}"
        }.join(', ')

        if tasks[:duration] - floor > @round_to_nearest/2 then
          duration = floor + @round_to_nearest
        else
          duration = floor
        end

        total_hours += duration / 60.0
        total_total_hours += duration / 60.0

        tmp = client.match /\((.*)\)/
        if not tmp[0].nil?
          client = client.sub(/\((.*)\)/, '')
          client = client.sub('Imagesoft', tmp[0].gsub(/[\(\)]/, ''))
        end
        %>
      <td><%= "#{(duration / 60.0)} hrs" %><%= ", including #{(tasks[:travel] / 60.0)} hrs travel" if tasks[:travel] > 0 %></td>
      <td><%= client %></td>
      <td>1. <%= tasks[:tasks][0] %></td>
    </tr>
        <% for i in (1..tasks[:tasks].length-1) %>
    <tr>
      <td></td>
      <td>
        <% if i == 1 then %>
          <%= times %>
        <% end %>
      </td>
      <td></td>
      <td><%= "#{(i+1)}. #{tasks[:tasks][i]}" %></td>
    </tr>
      <% end %>
      <% first = false %>
      <% if tasks[:tasks].length == 1 then %>
    <tr>
      <td></td>
      <td>
        <%= times %>
      </td>
      <td></td>
      <td></td>
    </tr>
      <% end %>
    <tr>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
    </tr>
      <% end %>
    <% end %>
  <% end %>
</tbody>
<tfoot>
  <tr>
    <td>TOTAL HOURS</td>
    <td><%= total_hours %> hrs</td>
    <td></td>
    <td></td>
</tfoot>
</table>
<% end %>

<p>Total for period: <%= total_total_hours %></p>
